#include <iostream>
#include<stdio.h>
#include "initialization.h"
#include "math/point2D.h"


/*
int main()
{
    printf("welcome to my game sample");
    engine::initialize();
    return 0;
}

*/

// ass1 c++.cpp : This file contains the 'main' function. Program execution begins and ends there.
//
#include <iostream>
#include <conio.h>
#include <stdio.h>

using namespace std;
void enemyposition(int, int);
void move(char, int);
void looop(int);
int ecount(int);
extern int i = 0, j = 0, c = 0;
struct enemy
{
    int x = 0;
    int y = 0;
    string name;
    struct enemy* link;
};




void add(struct enemy**,int);
void del(struct enemy**,int);
struc enemy** root = NULL;
void add()
{
    struct enemy* temp, * r;
    if (root == NULL)
    {
        temp = (struct enemy*)malloc(sizeof(struct enemy));
        temp->data = num;
        temp->link = NULL;
        root = temp;
    }
    else
    {
        temp = root;
        while (temp->link != NULL)
        {
            temp = temp->link;
        }
        r = (struct enemy*)malloc(sizeof(struct enemy));
        r->data = num;
        temp->link = r;
        r->link = NULL;
    }
}

void del()
{
    struct enemy* old, * temp;
    temp = *q;

}









int main()
{


    engine::initialize();


    char player[10];
    //char input;
    struct enemy e;
    int enemies;
    string enames[10];//link list
    cout << "enter the player name : ";
    cin >> player;
    cout << "initially player " << player << " is at [0][0]" << endl;
    cout << "enter the number of enemies : ";
    cin >> enemies;
    //cout << "enter movement";
    //cin >> input;
    for (int i = 0; i < enemies; i++)
    {
        cout << i + 1 << " enemy name :";
        cin >> enames[i];
        e.name = enames[i];
        //int t = enames[i].size();
        //enemyposition(t, enames[i], enemies, input);
        enemyposition(i, enemies);
    }
    //cout << "Hello World!\n";
    //cout << "enter movement";
    //cin >> input;
    looop(enemies);
    //move(input,enemies);




}
void looop(int enemies)
{
    char input;
    cout << "enter movement";
    cin >> input;
    move(input, enemies);
    c++;
}
void enemyposition(int i, int enemies)
{
    //int map[][];
    struct enemy danger[10];
    //int x, y;
        //danger[i].x = int(e[0]) - 100;
    danger[i].x = rand() % 100;
    //danger[i].y = danger[i].x - 100;
    danger[i].y = rand() % 100;
    cout << "enemy " << danger[i].name << "is at " << "[" << danger[i].x << "]" << "[" << danger[i].y << "]" << endl;
    //cout << "enemy is at " << "[" << x << "]" << "[" << y << "]"<<endl;
    //move();
}
int ecount(int enemies)
{
    if (c % 7 == 0)
    {
        enemies--;
        //return(enemies);
    }
    else if (c % 2 == 0)
    {
        enemies++;
        //return(enemies);
    }
    return(enemies);
}
void move(char input, int enemies)
{
    //int i, j;
    //char input;
    bool b = true;
    //cout << "moveed";
    if (input == 'l')
    {
        i -= 1;
        j = 0;
        cout << "player is at " << "[" << i << "]" << "[" << j << "]" << endl;
        //cout << "left";
        for (int k = 0; k < enemies; k++)
        {
            enemyposition(k, enemies);
        }
        enemies = ecount(enemies);
        looop(enemies);
    }
    else if (input == 'r')
    {
        i += 1;
        j = 0;
        cout << "player is at " << "[" << i << "]" << "[" << j << "]" << endl;
        //cout << "right";
        for (int k = 0; k < enemies; k++)
        {
            enemyposition(k, enemies);
        }
        enemies = ecount(enemies);
        looop(enemies);
    }
    else if (input == 'a')
    {
        i = 0;
        j += 1;
        cout << "player is at " << "[" << i << "]" << "[" << j << "]" << endl;
        //cout << "ahead";
        for (int k = 0; k < enemies; k++)
        {
            enemyposition(k, enemies);
        }
        enemies = ecount(enemies);
        looop(enemies);
    }
    else if (input == 'b')
    {
        i = 0;
        j -= 1;
        cout << "player is at " << "[" << i << "]" << "[" << j << "]" << endl;
        //cout << "back";
        for (int k = 0; k < enemies; k++)
        {
            enemyposition(k, enemies);
        }
        enemies = ecount(enemies);
        looop(enemies);
    }
    else
    {
        cout << "good bye";
    }
    //cout << "player is at [" << i << "][" << j << "]";
}
